pipeline {
    agent any

    triggers {
        pollSCM('* * * * *') // Poll SCM every minute
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests using JUnit'
                echo 'Running integration tests using Selenium'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Integrating SonarQube for code analysis'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Using OWASP ZAP for security scan'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to AWS EC2 staging instance'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to AWS EC2 production instance'
            }
        }
    }

    post {
        success {
            emailext (
                to: 's221461233@deakin.edu.au',
                subject: "Pipeline Status: SUCCESS",
                body: "The pipeline has completed successfully.",
                attachmentsPattern: "**/*.log"
            )
        }
        failure {
            emailext (
                to: 's221461233@deakin.edu.au',
                subject: "Pipeline Status: FAILURE",
                body: "The pipeline has failed. Please check the logs for details.",
                attachmentsPattern: "**/*.log"
            )
        }
    }
}

